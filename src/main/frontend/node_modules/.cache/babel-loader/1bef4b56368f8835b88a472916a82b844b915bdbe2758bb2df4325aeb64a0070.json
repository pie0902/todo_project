{"ast":null,"code":"var _jsxFileName = \"/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/allArticle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllArticles() {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n  const [error, setError] = useState(null); // 에러 상태 추가\n\n  useEffect(() => {\n    fetchArticles();\n  }, []);\n  const fetchArticles = async () => {\n    setLoading(true);\n    try {\n      // 로컬 스토리지에서 토큰을 가져옵니다.\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Authentication token not found');\n      }\n\n      // 요청 시 인증 토큰을 Authorization 헤더에 포함합니다.\n      const response = await fetch('/api/articles', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n      const data = await response.json();\n      setArticles(data);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 로딩 중일 때 표시할 UI\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 에러가 발생했을 때 표시할 UI\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), articles.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: article.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: article.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this)]\n    }, article.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n_s(AllArticles, \"F+n3wzqSM00u+eMgkpFtUnRvdM4=\");\n_c = AllArticles;\nexport default AllArticles;\nvar _c;\n$RefreshReg$(_c, \"AllArticles\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AllArticles","_s","articles","setArticles","loading","setLoading","error","setError","fetchArticles","token","localStorage","getItem","Error","response","fetch","headers","ok","data","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","article","title","content","id","_c","$RefreshReg$"],"sources":["/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/allArticle.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction AllArticles() {\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n  const [error, setError] = useState(null); // 에러 상태 추가\n\n  useEffect(() => {\n    fetchArticles();\n  }, []);\n\n  const fetchArticles = async () => {\n    setLoading(true);\n    try {\n      // 로컬 스토리지에서 토큰을 가져옵니다.\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Authentication token not found');\n      }\n\n      // 요청 시 인증 토큰을 Authorization 헤더에 포함합니다.\n      const response = await fetch('/api/articles', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const data = await response.json();\n      setArticles(data);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 로딩 중일 때 표시할 UI\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  // 에러가 발생했을 때 표시할 UI\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n      <div>\n        <h2>Articles</h2>\n        {articles.map(article => (\n            <div key={article.id}>\n              <h3>{article.title}</h3>\n              <p>{article.content}</p>\n            </div>\n        ))}\n      </div>\n  );\n}\n\nexport default AllArticles;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CD,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,MAAMI,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,gCAAgC,CAAC;MACnD;;MAEA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC5CC,OAAO,EAAE;UACP,eAAe,EAAG,UAASN,KAAM;QACnC;MACF,CAAC,CAAC;MAEF,IAAI,CAACI,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIJ,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEA,MAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCf,WAAW,CAACc,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACa,OAAO,CAAC;IACzB,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAqB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;;EAEA;EACA,IAAIlB,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAqB,QAAA,GAAK,SAAO,EAACd,KAAK;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,oBACIzB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBtB,QAAQ,CAACuB,GAAG,CAACC,OAAO,iBACjB3B,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAKM,OAAO,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBzB,OAAA;QAAAqB,QAAA,EAAIM,OAAO,CAACE;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFhBE,OAAO,CAACG,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGf,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEZ;AAACvB,EAAA,CA3DQD,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA6DpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}