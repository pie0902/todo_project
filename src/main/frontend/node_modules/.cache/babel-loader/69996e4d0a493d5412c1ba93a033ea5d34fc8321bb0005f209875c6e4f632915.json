{"ast":null,"code":"import Login from\"./login\";import{jsx as _jsx}from\"react/jsx-runtime\";function Test(){const handleSubmit=async e=>{e.preventDefault();const token=localStorage.getItem('token');// 로컬 스토리지에서 토큰을 가져옵니다.\n// 토큰이 없는 경우, 추가 로직을 실행하거나 오류 처리\nif(!token){console.error(\"토큰이 없습니다. 로그인이 필요합니다.\");return;// 혹은 사용자를 로그인 페이지로 리다이렉션\n}try{const response=await fetch('/test',{method:'GET',headers:{'Authorization':\"Bearer \".concat(token),// 헤더에 토큰을 추가합니다.\n'Content-Type':'application/json'}});const data=await response.json();if(response.ok){console.log('테스트 성공:',data);// 회원가입 성공 후 처리 (예: 로그인 페이지로 리다이렉트)\n}else{throw new Error(data.message||'회원가입 실패');}}catch(error){console.error('회원가입 에러:',error);}};return/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"\\uD14C\\uC2A4\\uD2B8 \\uC694\\uCCAD \\uBCF4\\uB0B4\\uAE30\"});}export default Test;","map":{"version":3,"names":["Login","jsx","_jsx","Test","handleSubmit","e","preventDefault","token","localStorage","getItem","console","error","response","fetch","method","headers","concat","data","json","ok","log","Error","message","onClick","children"],"sources":["/Users/jongilyun/Desktop/Spring/todo_project/src/main/frontend/src/components/test.js"],"sourcesContent":["import Login from \"./login\";\n\nfunction Test() {\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      const token = localStorage.getItem('token'); // 로컬 스토리지에서 토큰을 가져옵니다.\n\n      // 토큰이 없는 경우, 추가 로직을 실행하거나 오류 처리\n      if (!token) {\n        console.error(\"토큰이 없습니다. 로그인이 필요합니다.\");\n        return; // 혹은 사용자를 로그인 페이지로 리다이렉션\n      }\n\n      try {\n        const response = await fetch('/test', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`, // 헤더에 토큰을 추가합니다.\n            'Content-Type': 'application/json',\n          },\n        });\n        const data = await response.json();\n        if (response.ok) {\n          console.log('테스트 성공:', data);\n          // 회원가입 성공 후 처리 (예: 로그인 페이지로 리다이렉트)\n        } else {\n          throw new Error(data.message || '회원가입 실패');\n        }\n      } catch (error) {\n        console.error('회원가입 에러:', error);\n      }\n    };\n\n  return (\n      <button onClick={handleSubmit}>테스트 요청 보내기</button>\n  );\n}\nexport default Test;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5B,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACZ,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;AAE7C;AACA,GAAI,CAACF,KAAK,CAAE,CACVG,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC,CACtC,OAAQ;AACV,CAEA,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,OAAO,CAAE,CACpCC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYT,KAAK,CAAE,CAAE;AACpC,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CACF,KAAM,CAAAU,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClC,GAAIN,QAAQ,CAACO,EAAE,CAAE,CACfT,OAAO,CAACU,GAAG,CAAC,SAAS,CAAEH,IAAI,CAAC,CAC5B;AACF,CAAC,IAAM,CACL,KAAM,IAAI,CAAAI,KAAK,CAACJ,IAAI,CAACK,OAAO,EAAI,SAAS,CAAC,CAC5C,CACF,CAAE,MAAOX,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,UAAU,CAAEA,KAAK,CAAC,CAClC,CACF,CAAC,CAEH,mBACIT,IAAA,WAAQqB,OAAO,CAAEnB,YAAa,CAAAoB,QAAA,CAAC,oDAAU,CAAQ,CAAC,CAExD,CACA,cAAe,CAAArB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}