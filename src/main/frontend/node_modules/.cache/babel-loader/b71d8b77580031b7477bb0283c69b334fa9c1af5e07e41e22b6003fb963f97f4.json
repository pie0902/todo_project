{"ast":null,"code":"var _jsxFileName = \"/Users/jongilyun/Desktop/Spring/todo_veiw/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport App from './App';\nimport Login from './components/login';\nimport Signup from './components/signup';\n\n// 앱의 기본 스타일을 위한 CSS 파일을 임포트할 수 있습니다.\n// 예: import './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root')); // createRoot를 사용하는 방법\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this));\n// ReactDOM.render(\n//     <React.StrictMode>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<App />} />\n//           <Route path=\"/login\" element={<Login />} />\n//           <Route path=\"/signup\" element={<Signup />} />\n//           {/* 추가적으로 필요한 라우트를 여기에 정의할 수 있습니다. */}\n//         </Routes>\n//       </Router>\n//     </React.StrictMode>,\n//     document.getElementById('root')\n// );","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","Router","Route","Routes","App","Login","Signup","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/jongilyun/Desktop/Spring/todo_veiw/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport App from './App';\nimport Login from './components/login';\nimport Signup from './components/signup';\n\n// 앱의 기본 스타일을 위한 CSS 파일을 임포트할 수 있습니다.\n// 예: import './index.css';\nconst root = ReactDOM.createRoot(document.getElementById('root')); // createRoot를 사용하는 방법\nroot.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n);\n// ReactDOM.render(\n//     <React.StrictMode>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<App />} />\n//           <Route path=\"/login\" element={<Login />} />\n//           <Route path=\"/signup\" element={<Signup />} />\n//           {/* 추가적으로 필요한 라우트를 여기에 정의할 수 있습니다. */}\n//         </Routes>\n//       </Router>\n//     </React.StrictMode>,\n//     document.getElementById('root')\n// );"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGV,QAAQ,CAACW,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACnEH,IAAI,CAACI,MAAM,eACPL,OAAA,CAACV,KAAK,CAACgB,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACJ,GAAG;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACtB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}