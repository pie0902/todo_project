{"ast":null,"code":"var _jsxFileName = \"/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/signup.js\",\n  _s = $RefreshSig$();\n// Signup.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/users/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('회원가입 성공:', data);\n        // 회원가입 성공 후 처리 (예: 로그인 페이지로 리다이렉트)\n      } else {\n        throw new Error(data.message || '회원가입 실패');\n      }\n    } catch (error) {\n      console.error('회원가입 에러:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n_s(Signup, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signup","_s","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","Error","message","error","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/signup.js"],"sourcesContent":["// Signup.js\nimport React, { useState } from 'react';\n\nfunction Signup() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/users/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('회원가입 성공:', data);\n        // 회원가입 성공 후 처리 (예: 로그인 페이지로 리다이렉트)\n      } else {\n        throw new Error(data.message || '회원가입 실패');\n      }\n    } catch (error) {\n      console.error('회원가입 에러:', error);\n    }\n  };\n\n  return (\n      <form onSubmit={handleSubmit}>\n        <input\n            type=\"email\"\n            placeholder=\"이메일\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n        />\n        <input\n            type=\"password\"\n            placeholder=\"비밀번호\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n        />\n        <button type=\"submit\">회원가입</button>\n      </form>\n  );\n}\n\nexport default Signup;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;QAChDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb,KAAK;UAAEE;QAAS,CAAC;MAC1C,CAAC,CAAC;MACF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEJ,IAAI,CAAC;QAC7B;MACF,CAAC,MAAM;QACL,MAAM,IAAIK,KAAK,CAACL,IAAI,CAACM,OAAO,IAAI,SAAS,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAClC;EACF,CAAC;EAED,oBACIxB,OAAA;IAAMyB,QAAQ,EAAElB,YAAa;IAAAmB,QAAA,gBAC3B1B,OAAA;MACI2B,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,oBAAK;MACjBC,KAAK,EAAE1B,KAAM;MACb2B,QAAQ,EAAGtB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFpC,OAAA;MACI2B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,0BAAM;MAClBC,KAAK,EAAExB,QAAS;MAChByB,QAAQ,EAAGtB,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;MAC7CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFpC,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEb;AAAClC,EAAA,CA7CQD,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AA+Cf,eAAeA,MAAM;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}