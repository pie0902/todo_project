{"ast":null,"code":"var _jsxFileName = \"/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/deleteArticles.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeleteArticle() {\n  _s();\n  const {\n    id\n  } = useParams(); // URL에서 게시글 ID를 가져옵니다.\n  const navigate = useNavigate();\n  const deleteArticle = async () => {\n    const token = localStorage.getItem('token'); // 로컬 스토리지에서 토큰을 가져옵니다.\n    if (!token) {\n      alert(\"로그인이 필요합니다.\");\n      navigate('/login');\n      return;\n    }\n    try {\n      const response = await fetch(`/api/articles/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"글을 삭제할 수 없습니다.\");\n      }\n      alert(\"글이 성공적으로 삭제되었습니다.\");\n      navigate('/'); // 삭제 후 홈페이지나 게시글 목록 페이지로 리다이렉트합니다.\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAC8C\\uC2DC\\uAE00 \\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC774 \\uAC8C\\uC2DC\\uAE00\\uC744 \\uC815\\uB9D0\\uB85C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteArticle,\n      children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_s(DeleteArticle, \"1JEIvPRIKJKnaO45RHf/GR9vcR4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = DeleteArticle;\nexport default DeleteArticle;\nvar _c;\n$RefreshReg$(_c, \"DeleteArticle\");","map":{"version":3,"names":["React","useNavigate","useParams","jsxDEV","_jsxDEV","DeleteArticle","_s","id","navigate","deleteArticle","token","localStorage","getItem","alert","response","fetch","method","headers","ok","Error","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/deleteArticles.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nfunction DeleteArticle() {\n  const { id } = useParams(); // URL에서 게시글 ID를 가져옵니다.\n  const navigate = useNavigate();\n\n  const deleteArticle = async () => {\n    const token = localStorage.getItem('token'); // 로컬 스토리지에서 토큰을 가져옵니다.\n    if (!token) {\n      alert(\"로그인이 필요합니다.\");\n      navigate('/login');\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/articles/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"글을 삭제할 수 없습니다.\");\n      }\n\n      alert(\"글이 성공적으로 삭제되었습니다.\");\n      navigate('/'); // 삭제 후 홈페이지나 게시글 목록 페이지로 리다이렉트합니다.\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  return (\n      <div>\n        <h2>게시글 삭제</h2>\n        <p>이 게시글을 정말로 삭제하시겠습니까?</p>\n        <button onClick={deleteArticle}>삭제하기</button>\n      </div>\n  );\n}\n\nexport default DeleteArticle;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMM,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,aAAa,CAAC;MACpBL,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,iBAAgBR,EAAG,EAAC,EAAE;QAClDS,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,eAAe,EAAG,UAASP,KAAM;QACnC;MACF,CAAC,CAAC;MAEF,IAAI,CAACI,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEAN,KAAK,CAAC,mBAAmB,CAAC;MAC1BL,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdP,KAAK,CAACO,KAAK,CAACC,OAAO,CAAC;IACtB;EACF,CAAC;EAED,oBACIjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACftB,OAAA;MAAAkB,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3BtB,OAAA;MAAQuB,OAAO,EAAElB,aAAc;MAAAa,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEZ;AAACpB,EAAA,CAtCQD,aAAa;EAAA,QACLH,SAAS,EACPD,WAAW;AAAA;AAAA2B,EAAA,GAFrBvB,aAAa;AAwCtB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}