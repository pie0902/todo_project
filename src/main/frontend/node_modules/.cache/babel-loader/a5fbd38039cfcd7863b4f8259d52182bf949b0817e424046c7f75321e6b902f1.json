{"ast":null,"code":"var _jsxFileName = \"/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/allArticle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllArticles() {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n  const [error, setError] = useState(null); // 에러 상태 추가\n\n  useEffect(() => {\n    fetchArticles();\n  }, []);\n  const fetchArticles = async () => {\n    setLoading(true); // 데이터를 요청하기 전에 로딩 상태를 true로 설정\n    try {\n      const response = await fetch('/api/articles');\n      if (!response.ok) {\n        // 응답 상태가 OK가 아닌 경우 에러 처리\n        throw new Error('Something went wrong'); // 에러 메시지를 던집니다.\n      }\n      const data = await response.json();\n      console.error(response.status, response.statusText);\n      setArticles(data);\n    } catch (error) {\n      setError(error.message); // 에러 상태를 설정합니다.\n    } finally {\n      setLoading(false); // 요청이 끝나면 로딩 상태를 false로 설정\n    }\n  };\n\n  // 로딩 중일 때 표시할 UI\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 에러가 발생했을 때 표시할 UI\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), articles.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: article.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: article.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this)]\n    }, article.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n_s(AllArticles, \"F+n3wzqSM00u+eMgkpFtUnRvdM4=\");\n_c = AllArticles;\nexport default AllArticles;\nvar _c;\n$RefreshReg$(_c, \"AllArticles\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AllArticles","_s","articles","setArticles","loading","setLoading","error","setError","fetchArticles","response","fetch","ok","Error","data","json","console","status","statusText","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","article","title","content","id","_c","$RefreshReg$"],"sources":["/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/allArticle.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction AllArticles() {\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n  const [error, setError] = useState(null); // 에러 상태 추가\n\n  useEffect(() => {\n    fetchArticles();\n  }, []);\n\n  const fetchArticles = async () => {\n    setLoading(true); // 데이터를 요청하기 전에 로딩 상태를 true로 설정\n    try {\n      const response = await fetch('/api/articles');\n      if (!response.ok) { // 응답 상태가 OK가 아닌 경우 에러 처리\n        throw new Error('Something went wrong'); // 에러 메시지를 던집니다.\n      }\n      const data = await response.json();\n      console.error(response.status, response.statusText);\n      setArticles(data);\n    } catch (error) {\n\n      setError(error.message); // 에러 상태를 설정합니다.\n\n    } finally {\n      setLoading(false); // 요청이 끝나면 로딩 상태를 false로 설정\n    }\n  };\n\n  // 로딩 중일 때 표시할 UI\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  // 에러가 발생했을 때 표시할 UI\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n      <div>\n        <h2>Articles</h2>\n        {articles.map(article => (\n            <div key={article.id}>\n              <h3>{article.title}</h3>\n              <p>{article.content}</p>\n            </div>\n        ))}\n      </div>\n  );\n}\n\nexport default AllArticles;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CD,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCH,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;MAC7C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;MAC3C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACT,KAAK,CAACG,QAAQ,CAACO,MAAM,EAAEP,QAAQ,CAACQ,UAAU,CAAC;MACnDd,WAAW,CAACU,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOP,KAAK,EAAE;MAEdC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC,CAAC,CAAC;IAE3B,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED;EACA,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAoB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;;EAEA;EACA,IAAIjB,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAoB,QAAA,GAAK,SAAO,EAACb,KAAK;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,oBACIxB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBrB,QAAQ,CAACsB,GAAG,CAACC,OAAO,iBACjB1B,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAKM,OAAO,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBxB,OAAA;QAAAoB,QAAA,EAAIM,OAAO,CAACE;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFhBE,OAAO,CAACG,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGf,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEZ;AAACtB,EAAA,CAjDQD,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAmDpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}