{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AddArticle(){const[title,setTitle]=useState('');const[content,setContent]=useState('');const handleSubmit=async e=>{e.preventDefault();const token=localStorage.getItem('token');// 로컬 스토리지에서 토큰 가져오기\nconsole.log(token);if(!token){console.error(\"토큰이 없습니다. 로그인이 필요합니다.\");return;}const userInfo=parseJwt(token);console.log(userInfo);const article={title,content};await fetch('/api/articles',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)// 요청 헤더에 토큰 포함\n},body:JSON.stringify(article)});// Form 제출 후 필드 초기화\nsetTitle('');setContent('');// 추가적인 액션 (예: 게시글 목록 새로고침)\n};function parseJwt(token){// JWT 토큰의 페이로드 부분만 추출합니다.\nconst base64Url=token.split('.')[1];// base64Url을 base64로 변환합니다.\nconst base64=base64Url.replace(/-/g,'+').replace(/_/g,'/');// base64 인코딩된 문자열을 디코딩합니다.\nconst jsonPayload=decodeURIComponent(atob(base64).split('').map(function(c){return'%'+('00'+c.charCodeAt(0).toString(16)).slice(-2);}).join(''));// JSON 문자열을 객체로 변환합니다.\nreturn JSON.parse(jsonPayload);};// 사용 예시\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:title,onChange:e=>setTitle(e.target.value),placeholder:\"Title\",required:true}),/*#__PURE__*/_jsx(\"textarea\",{value:content,onChange:e=>setContent(e.target.value),placeholder:\"Content\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]})});}export default AddArticle;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","AddArticle","title","setTitle","content","setContent","handleSubmit","e","preventDefault","token","localStorage","getItem","console","log","error","userInfo","parseJwt","article","fetch","method","headers","concat","body","JSON","stringify","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","parse","children","onSubmit","type","value","onChange","target","placeholder","required"],"sources":["/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/addArticles.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction AddArticle() {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem('token'); // 로컬 스토리지에서 토큰 가져오기\n  console.log(token);\n    if (!token) {\n      console.error(\"토큰이 없습니다. 로그인이 필요합니다.\");\n      return;\n    }\n    const userInfo = parseJwt(token);\n    console.log(userInfo);\n    const article = { title, content };\n    await fetch('/api/articles', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`, // 요청 헤더에 토큰 포함\n      },\n      body: JSON.stringify(article),\n    });\n    // Form 제출 후 필드 초기화\n    setTitle('');\n    setContent('');\n    // 추가적인 액션 (예: 게시글 목록 새로고침)\n\n  };\n\n  function parseJwt(token) {\n    // JWT 토큰의 페이로드 부분만 추출합니다.\n    const base64Url = token.split('.')[1];\n    // base64Url을 base64로 변환합니다.\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    // base64 인코딩된 문자열을 디코딩합니다.\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n\n    // JSON 문자열을 객체로 변환합니다.\n    return JSON.parse(jsonPayload);\n  };\n\n\n// 사용 예시\n\n\n\n  return (\n      <div>\n      <form onSubmit={handleSubmit}>\n        <input\n            type=\"text\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n            placeholder=\"Title\"\n            required\n        />\n        <textarea\n            value={content}\n            onChange={e => setContent(e.target.value)}\n            placeholder=\"Content\"\n            required\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      </div>\n  );\n}\n\nexport default AddArticle;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}