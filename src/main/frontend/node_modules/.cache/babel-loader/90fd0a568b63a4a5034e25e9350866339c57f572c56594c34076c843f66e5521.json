{"ast":null,"code":"var _jsxFileName = \"/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/articleDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ArticleDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [article, setArticle] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchArticleAndComments();\n  }, [id]);\n  const fetchArticleAndComments = async () => {\n    // 게시글 상세 정보 가져오기\n    fetchArticle();\n    // 댓글 목록 가져오기\n    fetchComments();\n  };\n  const fetchComments = async () => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`/api/articles/${id}/comments`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      console.error(\"Failed to fetch comments.\");\n      return;\n    }\n    const data = await response.json();\n    setComments(data);\n  };\n  const handleNewCommentChange = e => {\n    setNewComment(e.target.value);\n  };\n  const fetchArticle = async () => {\n    // 로컬 스토리지에서 토큰을 가져옵니다.\n    const token = localStorage.getItem('token');\n\n    // 요청 시 인증 토큰을 Authorization 헤더에 포함합니다.\n    const response = await fetch(`/api/articles/${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }, [id]);\n    if (!response.ok) {\n      // 요청 실패 처리 (예: 에러 메시지 설정)\n      console.error(\"Failed to fetch article details.\");\n      return;\n    }\n    const data = await response.json();\n    setArticle(data);\n  };\n  const submitComment = async () => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`/api/articles/${id}/comments`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        content: newComment\n      })\n    });\n    if (!response.ok) {\n      console.error(\"Failed to submit comment.\");\n      return;\n    }\n    setNewComment('');\n    fetchComments(); // 댓글 목록 새로고침\n  };\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [updatedContent, setUpdatedContent] = useState('');\n  const {\n    articleId\n  } = useParams();\n  const startEditComment = (commentId, currentContent) => {\n    setIsEditing(true);\n    setEditingCommentId(commentId);\n    setUpdatedContent(currentContent); // 현재 댓글 내용으로 초기화\n  };\n  //댓글 수정\n  const submitUpdatedComment = async id => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`/api/articles/${articleId}/comments/${editingCommentId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: updatedContent\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update comment.');\n      }\n\n      // 성공적으로 수정되었다면, 수정 모드 종료 및 댓글 목록 새로고침\n      setIsEditing(false);\n      setEditingCommentId(null);\n      fetchComments();\n    } catch (error) {\n      console.error(error.message);\n      // 에러 처리 로직\n    }\n  };\n  if (!article) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 24\n  }, this);\n  const handleArticleClick = articleId => {\n    navigate(`/board/editArticles/${articleId}`); // 게시글 상세보기 페이지로 이동\n  };\n  const handleArticleClick2 = articleId => {\n    navigate(`/board/deleteArticles/${articleId}`); // 게시글 상세보기 페이지로 이동\n  };\n  const handleDelete = async (articleId, commentId) => {\n    // 사용자에게 삭제를 확인\n    const isConfirmed = window.confirm(\"댓글을 삭제하시겠습니까?\");\n    if (isConfirmed) {\n      // 삭제 로직 실행\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`/api/articles/${articleId}/comments/${commentId}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to delete comment.');\n        }\n\n        // 성공적으로 삭제되었다면, 댓글 목록 새로고침\n        fetchComments();\n      } catch (error) {\n        console.error(error.message);\n        // 에러 처리 로직 (예: 사용자에게 에러 메시지 표시)\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"article-detail-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"\\uC791\\uC131\\uC790: \", article.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uC81C\\uBAA9: \", article.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-box\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uAE00\\uB0B4\\uC6A9: \", article.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleArticleClick(article.id),\n        children: \"\\uAE00 \\uC218\\uC815\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"deleteArticle\",\n        onClick: () => handleArticleClick2(article.id),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uB313\\uAE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment-space\",\n          children: [comment.username, \": \", comment.content, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"comment-edit-btn\",\n            onClick: () => startEditComment(comment.id, comment.content),\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"comment-remove-btn\",\n            onClick: () => handleDelete(article.id, comment.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-comment-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: updatedContent,\n          onChange: e => setUpdatedContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitUpdatedComment,\n          children: \"\\uC218\\uC815 \\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(false),\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: handleNewCommentChange,\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitComment,\n        children: \"\\uB313\\uAE00 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(ArticleDetail, \"vsADyR9nDPZC9Uv8PI4eDYkTBDw=\", false, function () {\n  return [useParams, useNavigate, useParams];\n});\n_c = ArticleDetail;\nexport default ArticleDetail;\nvar _c;\n$RefreshReg$(_c, \"ArticleDetail\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","ArticleDetail","_s","id","article","setArticle","comments","setComments","newComment","setNewComment","navigate","fetchArticleAndComments","fetchArticle","fetchComments","token","localStorage","getItem","response","fetch","headers","ok","console","error","data","json","handleNewCommentChange","e","target","value","submitComment","method","body","JSON","stringify","content","isEditing","setIsEditing","editingCommentId","setEditingCommentId","updatedContent","setUpdatedContent","articleId","startEditComment","commentId","currentContent","submitUpdatedComment","Error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","handleArticleClick","handleArticleClick2","handleDelete","isConfirmed","window","confirm","className","username","title","onClick","map","comment","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/articleDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {useNavigate, useParams} from 'react-router-dom';\n\nfunction ArticleDetail() {\n  const { id } = useParams();\n  const [article, setArticle] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const navigate = useNavigate();\n\n\n  useEffect(() => {\n    fetchArticleAndComments();\n  }, [id]);\n\n  const fetchArticleAndComments = async () => {\n    // 게시글 상세 정보 가져오기\n    fetchArticle();\n    // 댓글 목록 가져오기\n    fetchComments();\n  };\n\n\n  const fetchComments = async () => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`/api/articles/${id}/comments`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n\n    if (!response.ok) {\n      console.error(\"Failed to fetch comments.\");\n      return;\n    }\n\n    const data = await response.json();\n    setComments(data);\n  };\n\n  const handleNewCommentChange = (e) => {\n    setNewComment(e.target.value);\n  };\n\n\n  const fetchArticle = async () => {\n    // 로컬 스토리지에서 토큰을 가져옵니다.\n    const token = localStorage.getItem('token');\n\n    // 요청 시 인증 토큰을 Authorization 헤더에 포함합니다.\n    const response = await fetch(`/api/articles/${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    },[id]);\n\n    if (!response.ok) {\n      // 요청 실패 처리 (예: 에러 메시지 설정)\n      console.error(\"Failed to fetch article details.\");\n      return;\n    }\n\n    const data = await response.json();\n    setArticle(data);\n  };\n\n\n\n  const submitComment = async () => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`/api/articles/${id}/comments`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({ content: newComment })\n    });\n\n    if (!response.ok) {\n      console.error(\"Failed to submit comment.\");\n      return;\n    }\n\n    setNewComment('');\n    fetchComments(); // 댓글 목록 새로고침\n  };\n\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [updatedContent, setUpdatedContent] = useState('');\n  const { articleId } = useParams();\n  const startEditComment = (commentId, currentContent) => {\n    setIsEditing(true);\n    setEditingCommentId(commentId);\n    setUpdatedContent(currentContent); // 현재 댓글 내용으로 초기화\n  };\n //댓글 수정\n  const submitUpdatedComment = async (id) => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`/api/articles/${articleId}/comments/${editingCommentId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ content: updatedContent })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update comment.');\n      }\n\n      // 성공적으로 수정되었다면, 수정 모드 종료 및 댓글 목록 새로고침\n      setIsEditing(false);\n      setEditingCommentId(null);\n      fetchComments();\n    } catch (error) {\n      console.error(error.message);\n      // 에러 처리 로직\n    }\n  };\n\n\n\n  if (!article) return <div>Loading...</div>;\n\n\n\n  const handleArticleClick = (articleId) => {\n    navigate(`/board/editArticles/${articleId}`); // 게시글 상세보기 페이지로 이동\n  };\n  const handleArticleClick2 = (articleId) => {\n    navigate(`/board/deleteArticles/${articleId}`); // 게시글 상세보기 페이지로 이동\n  };\n\n\n  const handleDelete = async (articleId, commentId) => {\n    // 사용자에게 삭제를 확인\n    const isConfirmed = window.confirm(\"댓글을 삭제하시겠습니까?\");\n    if (isConfirmed) {\n      // 삭제 로직 실행\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`/api/articles/${articleId}/comments/${commentId}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to delete comment.');\n        }\n\n        // 성공적으로 삭제되었다면, 댓글 목록 새로고침\n        fetchComments();\n      } catch (error) {\n        console.error(error.message);\n        // 에러 처리 로직 (예: 사용자에게 에러 메시지 표시)\n      }\n    }\n  };\n\n\n\n\n\n\n\n\n  return (\n      <>\n      <div className=\"article-detail-page\">\n        <h4>작성자: {article.username}</h4>\n        <h3>제목: {article.title}</h3>\n        <div className=\"text-box\">\n          <p>글내용: {article.content}</p>\n        </div>\n        <button onClick={() => handleArticleClick(article.id)}>글 수정하기\n        </button>\n        <button className=\"deleteArticle\" onClick={() => handleArticleClick2(article.id)}>x\n        </button>\n      </div>\n\n  {/* 댓글 목록 표시 */}\n  <div className=\"comments-section\">\n    <h4><span>댓글</span></h4>\n    {comments.map((comment) => (\n        <div key={comment.id} className=\"comment\">\n          <p className=\"comment-space\">{comment.username}: {comment.content}\n            <button className=\"comment-edit-btn\"\n                    onClick={() => startEditComment(comment.id,\n                        comment.content)}>수정\n            </button>\n            <button className=\"comment-remove-btn\"\n                    onClick={() => handleDelete(article.id, comment.id)}>x\n            </button>\n          </p>\n\n        </div>\n    ))}\n    {/*// JSX에서 수정 폼 표시 (댓글 목록 렌더링 부분에 추가)*/}\n    {\n        isEditing && (\n            <div className=\"edit-comment-form\">\n              <textarea value={updatedContent} onChange={(e) => setUpdatedContent(e.target.value)} />\n              <button onClick={submitUpdatedComment}>수정 완료</button>\n              <button onClick={() => setIsEditing(false)}>취소</button>\n            </div>\n        )\n    }\n\n\n  </div>\n\n  {/* 댓글 작성 폼 */}\n  <div className=\"comment-form\">\n    <textarea value={newComment} onChange={handleNewCommentChange} placeholder=\"댓글을 입력하세요...\" />\n    <button onClick={submitComment}>댓글 작성</button>\n  </div>\n  </>\n  );\n}\n\nexport default ArticleDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}