{"ast":null,"code":"var _jsxFileName = \"/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/login.css'; // CSS 파일을 위한 임포트 (아직 만들지 않았다면 만들어야 합니다.)\nimport { useHistory } from 'react-router-dom'; //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('로그인 성공:', data);\n        // JWT 토큰을 로컬 스토리지에 저장\n        localStorage.setItem('token', data.token);\n        history.push('/');\n        // 로그인 성공 후의 리다이렉트나 추가적인 처리\n      } else {\n        throw new Error(data.message || '로그인 실패');\n      }\n    } catch (error) {\n      console.error('로그인 에러:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('token'); // 로컬 스토리지에서 토큰을 가져옵니다.\n        const response = await fetch('/api/user/info', {\n          headers: {\n            'Authorization': `Bearer ${token}` // 헤더에 토큰을 추가합니다.\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          console.log('사용자 데이터:', data);\n        } else {\n          throw new Error('사용자 정보 가져오기 실패');\n        }\n      } catch (error) {\n        console.error('API 에러:', error);\n      }\n    };\n    fetchUserData(); // 컴포넌트가 마운트된 후에 호출됩니다.\n  }, []); // 빈 배열을 넣어 한 번만 실행되도록 합니다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_s(Login, \"AKtGztqZas3I1g6/IB1dTX9gq1Q=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","jsxDEV","_jsxDEV","Login","_s","history","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","localStorage","setItem","token","push","Error","message","error","fetchUserData","getItem","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/jongilyun/Desktop/Spring/todo_veiw/src/components/login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../css/login.css'; // CSS 파일을 위한 임포트 (아직 만들지 않았다면 만들어야 합니다.)\nimport { useHistory } from 'react-router-dom'; //\nfunction Login() {\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('로그인 성공:', data);\n        // JWT 토큰을 로컬 스토리지에 저장\n        localStorage.setItem('token', data.token);\n        history.push('/');\n        // 로그인 성공 후의 리다이렉트나 추가적인 처리\n      } else {\n        throw new Error(data.message || '로그인 실패');\n      }\n    } catch (error) {\n      console.error('로그인 에러:', error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('token'); // 로컬 스토리지에서 토큰을 가져옵니다.\n        const response = await fetch('/api/user/info', {\n          headers: {\n            'Authorization': `Bearer ${token}` // 헤더에 토큰을 추가합니다.\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          console.log('사용자 데이터:', data);\n        } else {\n          throw new Error('사용자 정보 가져오기 실패');\n        }\n      } catch (error) {\n        console.error('API 에러:', error);\n      }\n    };\n\n    fetchUserData(); // 컴포넌트가 마운트된 후에 호출됩니다.\n  }, []); // 빈 배열을 넣어 한 번만 실행되도록 합니다.\n\n  return (\n      <div className=\"login-container\">\n        <form onSubmit={handleSubmit} className=\"login-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">이메일</label>\n            <input\n                type=\"email\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">비밀번호</label>\n            <input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n            />\n          </div>\n          <button type=\"submit\">로그인</button>\n        </form>\n      </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}