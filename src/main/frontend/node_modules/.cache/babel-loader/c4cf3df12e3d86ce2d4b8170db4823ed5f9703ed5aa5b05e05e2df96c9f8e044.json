{"ast":null,"code":"import React,{useState}from'react';import'../css/login.css';import{Link,Navigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[isLoggedIn,setIsLoggedIn]=useState(false);// 로그인 상태 추가\nconst handleSubmit=async e=>{e.preventDefault();try{const response=await fetch('/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const data=await response.json();if(response.ok){console.log('로그인 성공:',data);// JWT 토큰을 로컬 스토리지에 저장\nlocalStorage.setItem('token',data.token);setIsLoggedIn(true);// 로그인 상태를 true로 설정\n}else{throw new Error(data.message||'로그인 실패');}}catch(error){console.error('로그인 에러:',error);}};// 로그인 상태가 true인 경우 <Navigate> 컴포넌트를 통해 홈페이지로 리다이렉션\nif(isLoggedIn){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"login-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"\\uC774\\uBA54\\uC77C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-btn-box\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:/*#__PURE__*/_jsx(\"button\",{className:\"App-link\",children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})})]})]})});}export default Login;","map":{"version":3,"names":["React","useState","Link","Navigate","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","isLoggedIn","setIsLoggedIn","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","localStorage","setItem","token","Error","message","error","to","replace","className","children","onSubmit","htmlFor","type","id","value","onChange","target","required"],"sources":["/Users/jongilyun/Desktop/Spring/todo_project/src/main/frontend/src/components/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../css/login.css';\nimport {Link, Navigate} from \"react-router-dom\";\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 로그인 상태 추가\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('로그인 성공:', data);\n        // JWT 토큰을 로컬 스토리지에 저장\n        localStorage.setItem('token', data.token);\n        setIsLoggedIn(true); // 로그인 상태를 true로 설정\n      } else {\n        throw new Error(data.message || '로그인 실패');\n      }\n    } catch (error) {\n      console.error('로그인 에러:', error);\n    }\n  };\n\n  // 로그인 상태가 true인 경우 <Navigate> 컴포넌트를 통해 홈페이지로 리다이렉션\n  if (isLoggedIn) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n      <div className=\"login-container\">\n        <form onSubmit={handleSubmit} className=\"login-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">이메일</label>\n            <input\n                type=\"email\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">비밀번호</label>\n            <input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n            />\n          </div>\n          <div className=\"login-btn-box\">\n          <button type=\"submit\">로그인</button>\n          <Link to=\"/signup\"><button className=\"App-link\">회원가입</button></Link>\n          </div>\n        </form>\n      </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}